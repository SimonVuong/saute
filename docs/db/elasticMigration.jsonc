
PUT consumers/_mapping
{
  "properties": {
    "plan": {
      "properties": {
        "referralCode": {
          "type": "keyword"
        }
      }
    }
  }
}

then make a referral code for each customer and attach it to them


PUT rests/_mapping
{
  "properties": {
    "menu": {
      "properties": {
        "addonGroups": {
          "properties": {
            "names": {
              "type": "keyword"
            },
            "limit": {
              "type": "integer"
            }
          }
        },
        "optionGroups": {
          "properties": {
            "names": {
              "type": "keyword"
            }
          }
        },
        "canAutoPick": {
          "type": "boolean"
        }
      }
    }
  }
}

POST rests/_update_by_query
{
  "script" : {
    "source": """
      for (int i = 0; i < ctx._source.menu.length; i++) {
        ctx._source.menu[i].addonGroups = new ArrayList();
        ctx._source.menu[i].optionGroups = new ArrayList();
        ctx._source.menu[i].canAutoPick = true;
      }
    """,
    "lang": "painless"
  },
  "query": { 
    "match_all": {}
  }
}


PUT orders/_mapping
{
  "properties": {
    "menu": {
      "properties": {
        "addons":  {
          "type": "keyword"
        },
        "options": {
          "type": "keyword"
        }
      }
    }
  }
}


POST orders/_update_by_query
{
  "script" : {
    "source": """
      for (int i = 0; i < ctx._source.deliveries.length; i++) {
        for (int j = 0; j < ctx._source.deliveries[i].meals.length; j++) {
          ctx._source.deliveries[i].meals[j].addons = new ArrayList();
          ctx._source.deliveries[i].meals[j].options = new ArrayList();
        }
      }
    """,
    "lang": "painless"
  },
  "query": { 
    "match_all": {}
  }
}



























/////////////////////////////////////////////////////////////





for all the consumers, add stripeSubId to the mealPlans


for all orders, 
  - go to each meal and add stripeSubscriptionItemId
  - add plans = [
      emailplan {
        stripeSubscriptionItemId
        readonly stripePlanId: string;
        readonly planName: PlanName;
        readonly mealCount: number;
      }
    ]
  }





PUT consumers/_mapping
{
  "properties": {
    "plan": {
      "properties": {
        "mealPlans" : {
          "properties": {
            "stripeSubscriptionItemId": {
              "type": "keyword"
            }
          }
        }
      }
    }
  }
}

PUT orders/_mapping
{
  "properties": {
    "deliveries": {
      "properties": {
        "meals" : {
          "properties": {
            "stripeSubscriptionItemId": {
              "type": "keyword"
            }
          }
        }
      }
    },
    "mealPlans": {
      "properties": {
        "stripeSubscriptionItemId": {
          "type": "keyword"
        },
        "stripePlanId": {
          "type": "keyword"
        },
        "planName": {
          "type": "keyword"
        },
        "mealCount": {
          "type": "integer"
        },
      }
    }
  }
}


POST consumers/_update_by_query
{
  "script" : {
    "source": """
      if (ctx._source.profile.email.equals("barooah93@yahoo.com")) {
        ctx._source.plan.mealPlans[0].stripeSubscriptionItemId = "si_HFwXfMRvb7haPM"
      }
      
      if (ctx._source.profile.email.equals("joshtolens@gmail.com")) {
        ctx._source.plan.mealPlans[0].stripeSubscriptionItemId = "si_HGAMgvVpR6ZyBz"
      }
      
      if (ctx._source.profile.email.equals("dbustosloves@gmail.com")) {
        ctx._source.plan.mealPlans[0].stripeSubscriptionItemId = "si_HFwL6iJSt6M1Zb"
      }
      
      if (ctx._source.profile.email.equals("nephercr@gmail.com")) {
        ctx._source.plan.mealPlans[0].stripeSubscriptionItemId = "si_HGGTprcjFTkXir"
      }
      
      if (ctx._source.profile.email.equals("lschairer011@gmail.com")) {
        ctx._source.plan.mealPlans[0].stripeSubscriptionItemId = "si_HFANFFbxqMtAE0"
      }
      
      if (ctx._source.profile.email.equals("arvinderbaring@gmail.com")) {
        ctx._source.plan.mealPlans[0].stripeSubscriptionItemId = "si_HH5AzYNsAZ7JcC"
      }
    """,
    "lang": "painless"
  },
  "query": { 
    "match_all": {}
  }
}

POST orders/_update_by_query
{
  "script" : {
    "source": """
      if (ctx._source.consumer.profile.email.equals("barooah93@yahoo.com")) {
        for (int i = 0; i < ctx._source.deliveries.length; i++) {
          def delivery = ctx._source.deliveries[i];
          for (int j = 0; j < delivery.meals.length; j++) {
            delivery.meals[j].stripeSubscriptionItemId = "si_HFwXfMRvb7haPM"
          }
        }
        def plans = [
          'stripeSubscriptionItemId': "si_HFwXfMRvb7haPM",
          'stripePlanId': "plan_HE1O8fPf3Nf3Uo",
          'planName': "Standard",
          'mealCount': 4
        ];
        def list = new ArrayList();
        list.add(plans);
        ctx._source.plans = list;
      }
      
      if (ctx._source.consumer.profile.email.equals("joshtolens@gmail.com")) {
        for (int i = 0; i < ctx._source.deliveries.length; i++) {
          def delivery = ctx._source.deliveries[i];
          for (int j = 0; j < delivery.meals.length; j++) {
            delivery.meals[j].stripeSubscriptionItemId = "si_HGAMgvVpR6ZyBz"
          }
        }
        def plans = [
          'stripeSubscriptionItemId': "si_HGAMgvVpR6ZyBz",
          'stripePlanId': "plan_HE1O8fPf3Nf3Uo",
          'planName': "Standard",
          'mealCount': 4
        ];
        def list = new ArrayList();
        list.add(plans);
        ctx._source.plans = list;
      }
      
      if (ctx._source.consumer.profile.email.equals("dbustosloves@gmail.com")) {
        for (int i = 0; i < ctx._source.deliveries.length; i++) {
          def delivery = ctx._source.deliveries[i];
          for (int j = 0; j < delivery.meals.length; j++) {
            delivery.meals[j].stripeSubscriptionItemId = "si_HFwL6iJSt6M1Zb"
          }
        }
        def plans = [
          'stripeSubscriptionItemId': "si_HFwL6iJSt6M1Zb",
          'stripePlanId': "plan_HE1O8fPf3Nf3Uo",
          'planName': "Standard",
          'mealCount': 4
        ];
        def list = new ArrayList();
        list.add(plans);
        ctx._source.plans = list;
      }
      
      if (ctx._source.consumer.profile.email.equals("nephercr@gmail.com")) {
        for (int i = 0; i < ctx._source.deliveries.length; i++) {
          def delivery = ctx._source.deliveries[i];
          for (int j = 0; j < delivery.meals.length; j++) {
            delivery.meals[j].stripeSubscriptionItemId = "si_HGGTprcjFTkXir"
          }
        }
        def plans = [
          'stripeSubscriptionItemId': "si_HGGTprcjFTkXir",
          'stripePlanId': "plan_HE1O8fPf3Nf3Uo",
          'planName': "Standard",
          'mealCount': 4
        ];
        def list = new ArrayList();
        list.add(plans);
        ctx._source.plans = list;
      }
      
      if (ctx._source.consumer.profile.email.equals("lschairer011@gmail.com")) {
        for (int i = 0; i < ctx._source.deliveries.length; i++) {
          def delivery = ctx._source.deliveries[i];
          for (int j = 0; j < delivery.meals.length; j++) {
            delivery.meals[j].stripeSubscriptionItemId = "si_HFANFFbxqMtAE0"
          }
        }
        def plans = [
          'stripeSubscriptionItemId': "si_HFANFFbxqMtAE0",
          'stripePlanId': "plan_HE1O8fPf3Nf3Uo",
          'planName': "Standard",
          'mealCount': 4
        ];
        def list = new ArrayList();
        list.add(plans);
        ctx._source.plans = list;
      }
      
      if (ctx._source.consumer.profile.email.equals("arvinderbaring@gmail.com")) {
        for (int i = 0; i < ctx._source.deliveries.length; i++) {
          def delivery = ctx._source.deliveries[i];
          for (int j = 0; j < delivery.meals.length; j++) {
            delivery.meals[j].stripeSubscriptionItemId = "si_HH5AzYNsAZ7JcC"
          }
        }
        def plans = [
          'stripeSubscriptionItemId': "si_HH5AzYNsAZ7JcC",
          'stripePlanId': "plan_HE1O8fPf3Nf3Uo",
          'planName': "Standard",
          'mealCount': 4
        ];
        def list = new ArrayList();
        list.add(plans);
        ctx._source.plans = list;
      }
    """,
    "lang": "painless"
  },
  "query": { 
    "match_all": {}
  }
}











///////////////////////////////// DEVVVVVVVVVVVVVVV





POST consumers/_update_by_query
{
  "script" : {
    "source": """
      if (ctx._source.profile.email.equals("simon.orchideats@gmail.com")) {
        ctx._source.plan.mealPlans[0].stripeSubscriptionItemId = "si_HIT5mu4RXyja7W"
      }
    """,
    "lang": "painless"
  },
  "query": { 
    "match_all": {}
  }
}

POST orders/_update_by_query
{
  "script" : {
    "source": """
      if (ctx._source.consumer.profile.email.equals("simon.orchideats@gmail.com")) {
        for (int i = 0; i < ctx._source.deliveries.length; i++) {
          def delivery = ctx._source.deliveries[i];
          for (int j = 0; j < delivery.meals.length; j++) {
            delivery.meals[j].stripeSubscriptionItemId = "si_HIT5mu4RXyja7W"
          }
        }
        def plans = [
          'stripeSubscriptionItemId': "si_HIT5mu4RXyja7W",
          'stripePlanId': "plan_HDGgkmXFCPQTlq",
          'planName': "Standard",
          'mealCount': 4
        ];
        def list = new ArrayList();
        list.add(plans);
        ctx._source.plans = list;
      }
    """,
    "lang": "painless"
  },
  "query": { 
    "match_all": {}
  }
}