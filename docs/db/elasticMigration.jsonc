PUT /tags/
{
  "mappings": {
    "dynamic": false,
    "properties": {
      "type": {
        "type": "keyword"
      },
      "name": {
        "type": "keyword"
      }
    }
  }
}

POST _bulk
{ "index" : { "_index" : "tags" } }
{ "name" : "American", "type": "cuisine" }
{ "index" : { "_index" : "tags" } }
{ "name" : "Chinese", "type": "cuisine" }
{ "index" : { "_index" : "tags" } }
{ "name" : "Cuban", "type": "cuisine" }
{ "index" : { "_index" : "tags" } }
{ "name" : "Indian", "type": "cuisine" }
{ "index" : { "_index" : "tags" } }
{ "name" : "Italian", "type": "cuisine" }
{ "index" : { "_index" : "tags" } }
{ "name" : "Japanese", "type": "cuisine" }
{ "index" : { "_index" : "tags" } }
{ "name" : "Korean", "type": "cuisine" }
{ "index" : { "_index" : "tags" } }
{ "name" : "Mediterranean", "type": "cuisine" }
{ "index" : { "_index" : "tags" } }
{ "name" : "Mexican", "type": "cuisine" }
{ "index" : { "_index" : "tags" } }
{ "name" : "Thai", "type": "cuisine" }
{ "index" : { "_index" : "tags" } }
{ "name" : "Vietnamese", "type": "cuisine" }


POST _bulk
{ "index" : { "_index" : "tags" } }
{ "name" : "Keto", "type": "diet" }
{ "index" : { "_index" : "tags" } }
{ "name" : "Low Cal", "type": "diet" }
{ "index" : { "_index" : "tags" } }
{ "name" : "Low Carb", "type": "diet" }
{ "index" : { "_index" : "tags" } }
{ "name" : "Pescatarian", "type": "diet" }
{ "index" : { "_index" : "tags" } }
{ "name" : "Protein", "type": "diet" }
{ "index" : { "_index" : "tags" } }
{ "name" : "Seafood", "type": "diet" }
{ "index" : { "_index" : "tags" } }
{ "name" : "Vegan", "type": "diet" }
{ "index" : { "_index" : "tags" } }
{ "name" : "Vegetarian", "type": "diet" }


POST _bulk
{ "index" : { "_index" : "tags" } }
{ "name" : "Pizza", "type": "form" }


add new mapping called rest2


then run the re-index


POST _reindex
{
  "source": {
    "index": "rests",
    "_source": {
      "excludes": [
        "menu.canAutoPick",
        "profile.tags"
      ]
    }
  },
  "dest": {
    "index": "rests2"
  },
  "script": {
    "source": """
      def menu = ctx._source.menu;
      ctx._source.remove("profile.tags");
      for (int i = 0; i < menu.length; i++) {
        def currTags = menu[i].tags;
        def newTags = new ArrayList();
        for (int j = 0; j < currTags.length; j++) {
          if (currTags[j].equals("Pizza")) {
            newTags.add([
              "name": currTags[j],
              "type": "form"
            ]);
          } if (currTags[j].equals("Keto") || currTags[j].equals("Low Cal") || currTags[j].equals("Low Carb") || currTags[j].equals("Pescatarian") || currTags[j].equals("Protein") || currTags[j].equals("Seafood") || currTags[j].equals("Vegan") || currTags[j].equals("Vegetarian")) {
            newTags.add([
              "name": currTags[j],
              "type": "diet"
            ]);
          } else {
            newTags.add([
              "name": currTags[j],
              "type": "cuisine"
            ]);
          }
        }
        menu[i].tags = newTags;
      }
    """
  }
}


then delete rests

DELETE rests


then remap rests with regular tags




then reindex back


POST _reindex
{
  "source": {
    "index": "rests2"
  },
  "dest": {
    "index": "rests"
  }
}










CONSUMERSSSS


add new mapping called consumers2

then run the re-index

POST _reindex
{
  "source": {
    "index": "consumers"
  },
  "dest": {
    "index": "consumers2"
  },
  "script": {
    "source": """
      if (ctx._source.plan != null) {
        def cuisines = ctx._source.plan.cuisines;
        def newTags = new ArrayList();
        for (int j = 0; j < cuisines.length; j++) {
          if (cuisines[j].equals("Pizza")) {
            newTags.add([
              "name": cuisines[j],
              "type": "form"
            ]);
          } if (cuisines[j].equals("Keto") || cuisines[j].equals("Low Cal") || cuisines[j].equals("Low Carb") || cuisines[j].equals("Pescatarian") || cuisines[j].equals("Protein") || cuisines[j].equals("Seafood") || cuisines[j].equals("Vegan") || cuisines[j].equals("Vegetarian")) {
            newTags.add([
              "name": cuisines[j],
              "type": "diet"
            ]);
          } else {
            newTags.add([
              "name": cuisines[j],
              "type": "cuisine"
            ]);
          }
        }
        ctx._source.plan.tags = newTags;
      }
    """
  }
}

then delete consumers

DELETE consumers


then remap rests with regular tags

then reindex back

POST _reindex
{
  "source": {
    "index": "consumers2",
    "_source": {
      "excludes": [
        "plan.cuisines"
      ]
    }
  },
  "dest": {
    "index": "consumers"
  }
}









ordersssssssssss


add new mapping called orders


then run the re-index


POST _reindex
{
  "source": {
    "index": "orders"
  },
  "dest": {
    "index": "orders2"
  },
  "script": {
    "source": """
      def deliveries = ctx._source.deliveries;
      ctx._source.remove("profile.tags");
      for (int i = 0; i < deliveries.length; i++) {
        def meals = deliveries[i].meals;
        for (int j = 0; j < meals.length; j++) {
          def currTags = meals[j].tags;
          def newTags = new ArrayList();
          for (int k = 0; k < currTags.length; k++) {
            if (currTags[k].equals("Pizza")) {
              newTags.add([
                "name": currTags[k],
                "type": "form"
              ]);
            } else if (currTags[k].equals("Keto") || currTags[k].equals("Low Cal") || currTags[k].equals("Low Carb") || currTags[k].equals("Pescatarian") || currTags[k].equals("Protein") || currTags[k].equals("Seafood") || currTags[k].equals("Vegan") || currTags[k].equals("Vegetarian")) {
              newTags.add([
                "name": currTags[k],
                "type": "diet"
              ]);
            } else {
              newTags.add([
                "name": currTags[k],
                "type": "cuisine"
              ]);
            }
          }
          meals[j].tags = newTags;
        }
      }
    """
  }
}


then delete orders

DELETE orders


then remap orders


then reindex back

POST _reindex
{
  "source": {
    "index": "orders2"
  },
  "dest": {
    "index": "orders"
  }
}
